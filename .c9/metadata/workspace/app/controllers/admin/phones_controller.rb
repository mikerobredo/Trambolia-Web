{"filter":false,"title":"phones_controller.rb","tooltip":"/app/controllers/admin/phones_controller.rb","undoManager":{"mark":3,"position":3,"stack":[[{"start":{"row":0,"column":0},"end":{"row":74,"column":0},"action":"remove","lines":["class PhonesController < ApplicationController","  before_action :set_phone, only: [:show, :edit, :update, :destroy]","","  # GET /phones","  # GET /phones.json","  def index","    @phones = Phone.all","  end","","  # GET /phones/1","  # GET /phones/1.json","  def show","  end","","  # GET /phones/new","  def new","    @phone = Phone.new","  end","","  # GET /phones/1/edit","  def edit","  end","","  # POST /phones","  # POST /phones.json","  def create","    @phone = Phone.new(phone_params)","","    respond_to do |format|","      if @phone.save","        format.html { redirect_to @phone, notice: 'Phone was successfully created.' }","        format.json { render :show, status: :created, location: @phone }","      else","        format.html { render :new }","        format.json { render json: @phone.errors, status: :unprocessable_entity }","      end","    end","  end","","  # PATCH/PUT /phones/1","  # PATCH/PUT /phones/1.json","  def update","    respond_to do |format|","      if @phone.update(phone_params)","        format.html { redirect_to @phone, notice: 'Phone was successfully updated.' }","        format.json { render :show, status: :ok, location: @phone }","      else","        format.html { render :edit }","        format.json { render json: @phone.errors, status: :unprocessable_entity }","      end","    end","  end","","  # DELETE /phones/1","  # DELETE /phones/1.json","  def destroy","    @phone.destroy","    respond_to do |format|","      format.html { redirect_to phones_url, notice: 'Phone was successfully destroyed.' }","      format.json { head :no_content }","    end","  end","","  private","    # Use callbacks to share common setup or constraints between actions.","    def set_phone","      @phone = Phone.find(params[:id])","    end","","    # Never trust parameters from the scary internet, only allow the white list through.","    def phone_params","      params.require(:phone).permit(:admin/phone)","    end","end",""],"id":2,"ignore":true},{"start":{"row":0,"column":0},"end":{"row":67,"column":0},"action":"insert","lines":["class Admin::BookController < Admin::AuthenticatedController","  def new","    load_data","    @book = Book.new","    @page_title = 'Create new book'","  end","","  def create","    @book = Book.new(book_params)","    if @book.save","      flash[:notice] = \"Book #{@book.title} was succesfully created.\"","      redirect_to :action => 'index'","    else","      load_data","      @page_title = 'Create new book'","      render :action => 'new'","    end","  end","","  def edit","    load_data","    @book = Book.find(params[:id])","    @page_title = 'Edit book'","  end","","  def update","    @book = Book.find(params[:id])","    if @book.update_attributes(book_params)","      flash[:notice] = \"Book #{@book.title} was succesfully updated.\"","      redirect_to :action => 'show', :id => @book","    else","      load_data","      @page_title = 'Edit book'","      render :action => 'edit'","    end","  end","","  def destroy","    @book = Book.find(params[:id])","    @book.destroy","    flash[:notice] = \"Succesfully deleted book #{@book.title}.\"","    redirect_to :action => 'index'","  end","","  def show","    @book = Book.find(params[:id])","    @page_title = @book.title","  end","","  def index","    sort_by = params[:sort_by]","    @books = Book.order(sort_by).paginate(:page => params[:page], :per_page => 5)","    @page_title = 'Listing books'","  end","","  private","","    def load_data","      @authors = Author.all","      @publishers = Publisher.all","    end","","    def book_params","      params.require(:book).permit(:title, :publisher_id, :published_at, { :author_ids => [] },","                                   :isbn, :blurb, :price, :page_count, :cover_image)","    end","end",""]}],[{"start":{"row":3,"column":15},"end":{"row":3,"column":16},"action":"remove","lines":["k"],"id":3}],[{"start":{"row":3,"column":14},"end":{"row":3,"column":15},"action":"remove","lines":["o"],"id":4}],[{"start":{"row":3,"column":13},"end":{"row":3,"column":14},"action":"remove","lines":["o"],"id":5}],[{"start":{"row":3,"column":9},"end":{"row":3,"column":10},"action":"insert","lines":["e"],"id":24}],[{"start":{"row":3,"column":8},"end":{"row":3,"column":9},"action":"insert","lines":["n"],"id":23}],[{"start":{"row":3,"column":7},"end":{"row":3,"column":8},"action":"insert","lines":["o"],"id":22}],[{"start":{"row":3,"column":6},"end":{"row":3,"column":7},"action":"insert","lines":["h"],"id":21}],[{"start":{"row":3,"column":5},"end":{"row":3,"column":6},"action":"insert","lines":["p"],"id":20}],[{"start":{"row":3,"column":5},"end":{"row":3,"column":6},"action":"remove","lines":["b"],"id":19}],[{"start":{"row":3,"column":6},"end":{"row":3,"column":7},"action":"remove","lines":["o"],"id":18}],[{"start":{"row":3,"column":7},"end":{"row":3,"column":8},"action":"remove","lines":["o"],"id":17}],[{"start":{"row":3,"column":8},"end":{"row":3,"column":9},"action":"remove","lines":["k"],"id":16}],[{"start":{"row":0,"column":17},"end":{"row":0,"column":18},"action":"insert","lines":["e"],"id":15}],[{"start":{"row":0,"column":16},"end":{"row":0,"column":17},"action":"insert","lines":["n"],"id":14}],[{"start":{"row":0,"column":15},"end":{"row":0,"column":16},"action":"insert","lines":["o"],"id":13}],[{"start":{"row":0,"column":14},"end":{"row":0,"column":15},"action":"insert","lines":["h"],"id":12}],[{"start":{"row":0,"column":13},"end":{"row":0,"column":14},"action":"insert","lines":["P"],"id":11}],[{"start":{"row":0,"column":13},"end":{"row":0,"column":14},"action":"remove","lines":["B"],"id":10}],[{"start":{"row":0,"column":14},"end":{"row":0,"column":15},"action":"remove","lines":["o"],"id":9}],[{"start":{"row":0,"column":15},"end":{"row":0,"column":16},"action":"remove","lines":["o"],"id":8}],[{"start":{"row":0,"column":16},"end":{"row":0,"column":17},"action":"remove","lines":["k"],"id":7}],[{"start":{"row":3,"column":12},"end":{"row":3,"column":13},"action":"remove","lines":["B"],"id":6}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":0,"column":16},"end":{"row":0,"column":16},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1491220014134,"hash":"d3635a8722d643fd74abb44fbb916b852864d0f4"}
{"filter":false,"title":"user_test.rb","tooltip":"/test/integration/user_test.rb","ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":39,"column":34},"end":{"row":39,"column":34},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"hash":"66d8dab63e71b62e535e2eb48aaa6e7a9be7a033","undoManager":{"mark":75,"position":75,"stack":[[{"start":{"row":59,"column":36},"end":{"row":60,"column":0},"action":"insert","lines":["",""],"id":2},{"start":{"row":60,"column":0},"end":{"row":60,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":60,"column":8},"end":{"row":60,"column":9},"action":"insert","lines":["a"],"id":3}],[{"start":{"row":60,"column":9},"end":{"row":60,"column":10},"action":"insert","lines":["s"],"id":4}],[{"start":{"row":60,"column":10},"end":{"row":60,"column":11},"action":"insert","lines":["s"],"id":5}],[{"start":{"row":60,"column":11},"end":{"row":60,"column":12},"action":"insert","lines":["e"],"id":6}],[{"start":{"row":60,"column":12},"end":{"row":60,"column":13},"action":"insert","lines":["r"],"id":7}],[{"start":{"row":60,"column":13},"end":{"row":60,"column":14},"action":"insert","lines":["t"],"id":8}],[{"start":{"row":60,"column":8},"end":{"row":60,"column":14},"action":"remove","lines":["assert"],"id":9},{"start":{"row":60,"column":8},"end":{"row":60,"column":20},"action":"insert","lines":["assert_equal"]}],[{"start":{"row":60,"column":20},"end":{"row":60,"column":21},"action":"insert","lines":[" "],"id":10}],[{"start":{"row":60,"column":21},"end":{"row":60,"column":23},"action":"insert","lines":["''"],"id":11}],[{"start":{"row":60,"column":22},"end":{"row":60,"column":23},"action":"insert","lines":["u"],"id":12}],[{"start":{"row":60,"column":23},"end":{"row":60,"column":24},"action":"insert","lines":["s"],"id":13}],[{"start":{"row":60,"column":24},"end":{"row":60,"column":25},"action":"insert","lines":["e"],"id":14}],[{"start":{"row":60,"column":25},"end":{"row":60,"column":26},"action":"insert","lines":["r"],"id":15}],[{"start":{"row":60,"column":8},"end":{"row":60,"column":9},"action":"insert","lines":["#"],"id":16}],[{"start":{"row":30,"column":29},"end":{"row":30,"column":47},"action":"remove","lines":["Create new account"],"id":17},{"start":{"row":30,"column":29},"end":{"row":30,"column":48},"action":"insert","lines":["Crear nueva cuenta."]}],[{"start":{"row":42,"column":29},"end":{"row":42,"column":33},"action":"remove","lines":["Name"],"id":18},{"start":{"row":42,"column":29},"end":{"row":42,"column":35},"action":"insert","lines":["Nombre"]}],[{"start":{"row":46,"column":36},"end":{"row":46,"column":97},"action":"remove","lines":["Account #{user_name} was succesfully created. User logged in."],"id":19},{"start":{"row":46,"column":36},"end":{"row":46,"column":101},"action":"insert","lines":["La cuenta George Smith fue creada con éxito. Usuario autenticado."]}],[{"start":{"row":46,"column":46},"end":{"row":46,"column":58},"action":"remove","lines":["George Smith"],"id":20},{"start":{"row":46,"column":46},"end":{"row":46,"column":58},"action":"insert","lines":["#{user_name}"]}],[{"start":{"row":47,"column":34},"end":{"row":47,"column":97},"action":"remove","lines":["\"Account #{user_name} was succesfully created. User logged in.\""],"id":21},{"start":{"row":47,"column":34},"end":{"row":47,"column":101},"action":"insert","lines":["\"La cuenta #{user_name} fue creada con éxito. Usuario autenticado.\""]}],[{"start":{"row":62,"column":29},"end":{"row":62,"column":33},"action":"remove","lines":["Name"],"id":22},{"start":{"row":62,"column":29},"end":{"row":62,"column":30},"action":"insert","lines":["N"]}],[{"start":{"row":62,"column":30},"end":{"row":62,"column":31},"action":"insert","lines":["o"],"id":23}],[{"start":{"row":62,"column":31},"end":{"row":62,"column":32},"action":"insert","lines":["m"],"id":24}],[{"start":{"row":62,"column":32},"end":{"row":62,"column":33},"action":"insert","lines":["b"],"id":25}],[{"start":{"row":62,"column":33},"end":{"row":62,"column":34},"action":"insert","lines":["r"],"id":26}],[{"start":{"row":62,"column":34},"end":{"row":62,"column":35},"action":"insert","lines":["e"],"id":27}],[{"start":{"row":62,"column":35},"end":{"row":62,"column":36},"action":"insert","lines":["."],"id":28}],[{"start":{"row":62,"column":35},"end":{"row":62,"column":36},"action":"remove","lines":["."],"id":29}],[{"start":{"row":76,"column":29},"end":{"row":76,"column":41},"action":"remove","lines":["Edit account"],"id":30},{"start":{"row":76,"column":29},"end":{"row":76,"column":42},"action":"insert","lines":["Editar cuenta"]}],[{"start":{"row":89,"column":29},"end":{"row":89,"column":33},"action":"remove","lines":["Name"],"id":31},{"start":{"row":89,"column":29},"end":{"row":89,"column":30},"action":"insert","lines":["N"]}],[{"start":{"row":89,"column":30},"end":{"row":89,"column":31},"action":"insert","lines":["o"],"id":32}],[{"start":{"row":89,"column":31},"end":{"row":89,"column":32},"action":"insert","lines":["m"],"id":33}],[{"start":{"row":89,"column":32},"end":{"row":89,"column":33},"action":"insert","lines":["b"],"id":34}],[{"start":{"row":89,"column":33},"end":{"row":89,"column":34},"action":"insert","lines":["r"],"id":35}],[{"start":{"row":89,"column":34},"end":{"row":89,"column":35},"action":"insert","lines":["e"],"id":36}],[{"start":{"row":93,"column":36},"end":{"row":93,"column":82},"action":"remove","lines":["Account #{user_name} was succesfully updated.\""],"id":37},{"start":{"row":93,"column":36},"end":{"row":93,"column":89},"action":"insert","lines":["La cuenta George Jackson se actualizó correctamente.\""]}],[{"start":{"row":93,"column":46},"end":{"row":93,"column":60},"action":"remove","lines":["George Jackson"],"id":38},{"start":{"row":93,"column":46},"end":{"row":93,"column":60},"action":"insert","lines":[" #{user_name} "]}],[{"start":{"row":93,"column":60},"end":{"row":93,"column":61},"action":"remove","lines":[" "],"id":39}],[{"start":{"row":94,"column":34},"end":{"row":94,"column":81},"action":"remove","lines":["\"Account #{user_name} was succesfully updated.\""],"id":40},{"start":{"row":94,"column":34},"end":{"row":94,"column":87},"action":"insert","lines":["\"La cuenta  #{user_name} se actualizó correctamente.\""]}],[{"start":{"row":93,"column":46},"end":{"row":93,"column":47},"action":"remove","lines":[" "],"id":41}],[{"start":{"row":94,"column":44},"end":{"row":94,"column":46},"action":"remove","lines":["  "],"id":42}],[{"start":{"row":94,"column":44},"end":{"row":94,"column":45},"action":"insert","lines":[" "],"id":43}],[{"start":{"row":30,"column":47},"end":{"row":30,"column":48},"action":"remove","lines":["."],"id":44}],[{"start":{"row":0,"column":0},"end":{"row":110,"column":0},"action":"remove","lines":["require File.dirname(__FILE__) + '/../test_helper'","","class UserTest < ActionDispatch::IntegrationTest","","  def setup","  end","","  test \"user_account\" do","    george = new_session_as(:george)","    user_account = george.creates_user_account(:user => { :name => 'George Smith', :login => 'george',","                                               :email => 'george@emporium.com', :password => 'gold',","                                               :password_confirmation => 'gold' })","    george.shows_user_account user_account","    george.edits_user_account(user_account, :user => { :name => 'George Jackson', :login => 'george',","                                            :email => 'george@emporium.com', :password => 'silver',","                                            :password_confirmation => 'silver' })","  end","","  private","","  module BrowsingTestDSL","    include ERB::Util","    attr_writer :name","","    def creates_user_account(parameters)","      user_name = parameters[:user][:name]","      get '/user/new'","      assert_response :success","      assert_template 'user/new'","      assert_select 'div#content' do","        assert_select 'h1', 'Crear nueva cuenta'","        assert_select 'input#user_name'","      end","      # assert_tag :tag => 'h1', :content => 'Create new account'","      # assert_tag :tag => 'input', :attributes => { :id => 'user_name' }","      post '/user/create', parameters","      assert_response :redirect","      follow_redirect!","      assert_response :success","      assert_template 'user/show'","      assert_select 'div#content' do","        assert_select 'h1', user_name","        assert_select 'dt', 'Nombre'","        assert_select 'dd', user_name","      end","      # assert_tag :tag => 'h1', :content => user_name","      assert_equal flash[:notice], \"La cuenta #{user_name} fue creada con éxito. Usuario autenticado.\"","      assert_select 'div#notice', \"La cuenta #{user_name} fue creada con éxito. Usuario autenticado.\"","      # assert_tag :tag => 'div', :attributes => { :id => 'notice' },","      #                           :content => \"Account #{user_name} was succesfully created. User logged in.\"","      # assert_tag :tag => 'dt', :content => 'Name'","      # assert_tag :tag => 'dd', :content => user_name","      return User.find_by_login(parameters[:user][:login])","    end","","    def shows_user_account(user_account)","      get \"/user/show/?id=#{user_account.id}\"","      assert_response :success","      assert_template 'user/show'","      assert_select 'div#content' do","        #assert_equal 'user'","        assert_select 'h1', user_account.name","        assert_select 'dt', 'Nombre'","        assert_select 'dd', user_account.name","      end","      # assert_tag :tag => 'h1', :content => user_account.name","      # assert_tag :tag => 'dt', :content => 'Name'","      # assert_tag :tag => 'dd', :content => user_account.name","    end","","    def edits_user_account(user_account, parameters)","      user = User.find_by_id(user_account.id)","      get \"/user/edit?id=#{user.id}\"","      assert_response :success","      assert_template 'user/edit'","      assert_select 'div#content' do","        assert_select 'h1', 'Editar cuenta'","        assert_select 'input#user_name'","      end","      # assert_tag :tag => 'h1', :content => 'Edit account'","      # assert_tag :tag => 'input', :attributes => { :id => 'user_name' }","      post '/user/update', parameters","      assert_response :redirect","      follow_redirect!","      assert_response :success","      assert_template 'user/show'","      user_name = parameters[:user][:name]","      assert_select 'div#content' do","        assert_select 'h1', user_name","        assert_select 'dt', 'Nombre'","        assert_select 'dd', user_name","      end","      # assert_tag :tag => 'h1', :content => user_name","      assert_equal flash[:notice], \"La cuenta #{user_name} se actualizó correctamente.\"","      assert_select 'div#notice', \"La cuenta #{user_name} se actualizó correctamente.\"","      # assert_tag :tag => 'div', :attributes => { :id => 'notice' },","      #                           :content => \"Account #{user_name} was succesfully updated.\"","      # assert_tag :tag => 'dt', :content => 'Name'","      # assert_tag :tag => 'dd', :content => user_name","    end","  end","","  def new_session_as(name)","    open_session do |session|","      session.extend(BrowsingTestDSL)","      session.name = name","      yield session if block_given?","    end","  end","end",""],"id":45},{"start":{"row":0,"column":0},"end":{"row":86,"column":0},"action":"insert","lines":["require 'test_helper'","","class UserTest < ActionDispatch::IntegrationTest","","  def setup","  end","","  test \"user_account\" do","    george = new_session_as(:george)","    user_account = george.creates_user_account(:user => { :name => 'Pepe Malia', :login => 'pepe',","                                               :email => 'pepe@emporium.com', :password => 'gold',","                                               :password_confirmation => 'gold' })","    george.shows_user_account user_account","    george.edits_user_account(user_account, :user => { :name => 'Jeremy Keith', :login => 'jeremy',","                                            :email => 'jeremy@emporium.com', :password => 'silver',","                                            :password_confirmation => 'silver' })","  end","","  private","","  module BrowsingTestDSL","    include ERB::Util","    attr_writer :name","","    def creates_user_account(parameters)","      get '/user/new'","      assert_response :success","      assert_template 'user/new'","      assert_select 'div#content' do","        assert_select 'h1', 'Crear cuenta'","        assert_select 'input#user_name'","      end","","      post '/user/create', parameters","      assert_response :redirect","      follow_redirect!","      assert_response :success","      assert_template 'user/show'","      user_name = parameters[:user][:name]","      assert_equal user_name, User.find_by_login(parameters[:user][:login]).name","      assert_equal flash[:notice], \"Cuenta #{user_name} fue creada correctamente. Sesión iniciada.\"","      assert_select 'div#notice', \"Cuenta #{user_name} fue creada correctamente. Sesión iniciada.\"","      return User.find_by_login(parameters[:user][:login])","    end","","    def shows_user_account(user_account)","      get \"/user/show/?id=#{user_account.id}\"","      assert_response :success","      assert_template 'user/show'","      assert_select 'div#content' do","        assert_select 'h1', user_account.name","        assert_select 'dt', 'Nombre'","        assert_select 'dd', user_account.name","      end","    end","","    def edits_user_account(user_account, parameters)","      user = User.find_by_id(user_account.id)","      get \"/user/edit?id=#{user.id}\"","      assert_response :success","      assert_template 'user/edit'","      assert_select 'div#content' do","        assert_select 'h1', 'Editar cuenta'","        assert_select 'input#user_name'","      end","","      post '/user/update', parameters","      assert_response :redirect","      follow_redirect!","      assert_response :success","      assert_template 'user/show'","      user_name = parameters[:user][:name]","      assert_equal user_name, User.find_by_login(parameters[:user][:login]).name","      assert_equal flash[:notice], \"Cuenta #{user_name} fue actualizada correctamente.\"","      assert_select 'div#notice', \"Cuenta #{user_name} fue actualizada correctamente.\"","    end","  end","","  def new_session_as(name)","    open_session do |session|","      session.extend(BrowsingTestDSL)","      session.name = name","      yield session if block_given?","    end","  end","end",""]}],[{"start":{"row":39,"column":80},"end":{"row":40,"column":0},"action":"insert","lines":["",""],"id":46},{"start":{"row":40,"column":0},"end":{"row":40,"column":6},"action":"insert","lines":["      "]}],[{"start":{"row":40,"column":6},"end":{"row":40,"column":72},"action":"insert","lines":["La cuenta #{@user.name} fue creada con éxito. Usuario autenticado."],"id":47}],[{"start":{"row":40,"column":23},"end":{"row":40,"column":24},"action":"remove","lines":["."],"id":48}],[{"start":{"row":40,"column":23},"end":{"row":40,"column":24},"action":"insert","lines":["-"],"id":49}],[{"start":{"row":40,"column":23},"end":{"row":40,"column":24},"action":"remove","lines":["-"],"id":50}],[{"start":{"row":40,"column":23},"end":{"row":40,"column":24},"action":"insert","lines":["_"],"id":51}],[{"start":{"row":40,"column":5},"end":{"row":40,"column":72},"action":"remove","lines":[" La cuenta #{@user_name} fue creada con éxito. Usuario autenticado."],"id":52}],[{"start":{"row":41,"column":36},"end":{"row":41,"column":98},"action":"remove","lines":["Cuenta #{user_name} fue creada correctamente. Sesión iniciada."],"id":53},{"start":{"row":41,"column":36},"end":{"row":41,"column":103},"action":"insert","lines":[" La cuenta #{@user_name} fue creada con éxito. Usuario autenticado."]}],[{"start":{"row":40,"column":4},"end":{"row":40,"column":5},"action":"remove","lines":[" "],"id":54}],[{"start":{"row":40,"column":2},"end":{"row":40,"column":4},"action":"remove","lines":["  "],"id":55}],[{"start":{"row":40,"column":0},"end":{"row":40,"column":2},"action":"remove","lines":["  "],"id":56}],[{"start":{"row":39,"column":80},"end":{"row":40,"column":0},"action":"remove","lines":["",""],"id":57}],[{"start":{"row":41,"column":35},"end":{"row":41,"column":97},"action":"remove","lines":["Cuenta #{user_name} fue creada correctamente. Sesión iniciada."],"id":58},{"start":{"row":41,"column":35},"end":{"row":41,"column":102},"action":"insert","lines":[" La cuenta #{@user_name} fue creada con éxito. Usuario autenticado."]}],[{"start":{"row":40,"column":36},"end":{"row":40,"column":37},"action":"remove","lines":[" "],"id":59}],[{"start":{"row":41,"column":35},"end":{"row":41,"column":36},"action":"remove","lines":[" "],"id":60}],[{"start":{"row":73,"column":36},"end":{"row":73,"column":86},"action":"remove","lines":["Cuenta #{user_name} fue actualizada correctamente."],"id":61},{"start":{"row":73,"column":36},"end":{"row":73,"column":87},"action":"insert","lines":["La cuenta #{@user.name} se actualizó correctamente."]}],[{"start":{"row":73,"column":53},"end":{"row":73,"column":54},"action":"remove","lines":["."],"id":62}],[{"start":{"row":73,"column":53},"end":{"row":73,"column":54},"action":"insert","lines":["-"],"id":63}],[{"start":{"row":73,"column":53},"end":{"row":73,"column":54},"action":"remove","lines":["-"],"id":64}],[{"start":{"row":73,"column":53},"end":{"row":73,"column":54},"action":"insert","lines":["_"],"id":65}],[{"start":{"row":73,"column":49},"end":{"row":73,"column":58},"action":"remove","lines":["user_name"],"id":66},{"start":{"row":73,"column":49},"end":{"row":73,"column":58},"action":"insert","lines":["user_name"]}],[{"start":{"row":74,"column":35},"end":{"row":74,"column":85},"action":"remove","lines":["Cuenta #{user_name} fue actualizada correctamente."],"id":67},{"start":{"row":74,"column":35},"end":{"row":74,"column":86},"action":"insert","lines":["La cuenta #{@user_name} se actualizó correctamente."]}],[{"start":{"row":29,"column":35},"end":{"row":29,"column":36},"action":"insert","lines":["n"],"id":68}],[{"start":{"row":29,"column":36},"end":{"row":29,"column":37},"action":"insert","lines":["u"],"id":69}],[{"start":{"row":29,"column":37},"end":{"row":29,"column":38},"action":"insert","lines":["e"],"id":70}],[{"start":{"row":29,"column":38},"end":{"row":29,"column":39},"action":"insert","lines":["v"],"id":71}],[{"start":{"row":29,"column":39},"end":{"row":29,"column":40},"action":"insert","lines":["a"],"id":72}],[{"start":{"row":29,"column":40},"end":{"row":29,"column":41},"action":"insert","lines":[" "],"id":73}],[{"start":{"row":40,"column":48},"end":{"row":40,"column":49},"action":"remove","lines":["@"],"id":74}],[{"start":{"row":41,"column":47},"end":{"row":41,"column":48},"action":"remove","lines":["@"],"id":75}],[{"start":{"row":73,"column":48},"end":{"row":73,"column":49},"action":"remove","lines":["@"],"id":76}],[{"start":{"row":74,"column":47},"end":{"row":74,"column":48},"action":"remove","lines":["@"],"id":77}]]},"timestamp":1495448080408}